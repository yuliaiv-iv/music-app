[{"C:\\Users\\MAIN\\dev\\music-app\\src\\index.js":"1","C:\\Users\\MAIN\\dev\\music-app\\src\\App.js":"2","C:\\Users\\MAIN\\dev\\music-app\\src\\reportWebVitals.js":"3","C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Player.js":"4","C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Song.js":"5","C:\\Users\\MAIN\\dev\\music-app\\src\\data.js":"6","C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Library.js":"7","C:\\Users\\MAIN\\dev\\music-app\\src\\components\\LibraryItem.js":"8","C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Nav.js":"9"},{"size":478,"mtime":1607953730695,"results":"10","hashOfConfig":"11"},{"size":1988,"mtime":1608124174599,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2899,"mtime":1608123798349,"results":"14","hashOfConfig":"11"},{"size":287,"mtime":1608124199119,"results":"15","hashOfConfig":"11"},{"size":2547,"mtime":1608010920102,"results":"16","hashOfConfig":"11"},{"size":658,"mtime":1608107884553,"results":"17","hashOfConfig":"11"},{"size":1025,"mtime":1608124199119,"results":"18","hashOfConfig":"11"},{"size":529,"mtime":1608107962627,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"3wyrit",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\MAIN\\dev\\music-app\\src\\index.js",[],["40","41"],"C:\\Users\\MAIN\\dev\\music-app\\src\\App.js",[],"C:\\Users\\MAIN\\dev\\music-app\\src\\reportWebVitals.js",[],"C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Player.js",["42","43"],"import React, { useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = (props) => {\r\n  const {\r\n    setIsPlaying,\r\n    setCurrentSong,\r\n    currentSong,\r\n    isPlaying,\r\n    setSongInfo,\r\n    songInfo,\r\n    audioRef,\r\n    setSongs,\r\n    songs\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true\r\n        }\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false\r\n        }\r\n      }\r\n    })\r\n    setSongs(newSong);\r\n  }, [currentSong]);\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  }\r\n\r\n  const moveHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: e.target.value\r\n    });\r\n  };\r\n\r\n  function updateTimer(time) {\r\n    return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2);\r\n  };\r\n\r\n  const skipSongHandler = async (direction) => {\r\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === 'forward') {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n    }\r\n    if (direction === 'back') {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length])\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  }\r\n\r\n  return (\r\n    <div className='player'>\r\n      <div className='player__control'>\r\n        <p>{updateTimer(songInfo.currentTime)}</p>\r\n        <input\r\n          type='range'\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          onChange={moveHandler}\r\n        />\r\n        <p>{songInfo.duration ? updateTimer(songInfo.duration) : '0:00'}</p>\r\n      </div>\r\n      <div className='player__handler'>\r\n        <FontAwesomeIcon\r\n          className='player__back'\r\n          icon={faAngleLeft}\r\n          size='2x'\r\n          onClick={() => skipSongHandler('back')}\r\n        />\r\n        <FontAwesomeIcon\r\n          className='player__play'\r\n          icon={isPlaying ? faPause : faPlay} size='2x'\r\n          onClick={playSongHandler}\r\n        />\r\n        <FontAwesomeIcon\r\n          className='player__play'\r\n          icon={faAngleRight}\r\n          size='2x'\r\n          onClick={() => skipSongHandler('forward')}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player;","C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Song.js",[],"C:\\Users\\MAIN\\dev\\music-app\\src\\data.js",[],"C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Library.js",[],"C:\\Users\\MAIN\\dev\\music-app\\src\\components\\LibraryItem.js",[],"C:\\Users\\MAIN\\dev\\music-app\\src\\components\\Nav.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":39,"column":6,"nodeType":"54","endLine":39,"endColumn":19,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'playAudio' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"61","text":"62"},[777,790],"[currentSong, setSongs, songs]"]